name: Node.js CI/CD Workflow

on:
  push:
  pull_request:
    types:
      - opened
      - reopened

jobs:
  ci:
    name: Continuous Integration (CI)
    # https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      # # https://github.com/marketplace/actions/checkout
      - name: Check out code
        uses: actions/checkout@v4

      # https://github.com/marketplace/actions/setup-node-js-environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies (npm-install)
        run: npm ci

      - name: Run Linter (npm-lint)
        run: npm run lint

      - name: Run Tests (unit-test)
        run: npm run test:coverage

      - name: Build the App (build-app)
        run: npm run build

  cd:
    name: Continuous Delivery (CD)
    # https://stackoverflow.com/questions/67531606/how-to-deal-with-long-conditional-expression-in-github-actions-workflow
    if: |-
      ${{ 
        (github.event_name == 'push' && github.ref == 'refs/heads/main') 
      }}
    runs-on: ubuntu-20.04
    needs: ci
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set IMAGE_NAME and IMAGE_VERSION
        run: |
          echo "IMAGE_NAME=$(node -p 'require("./package.json").name')" >> ${GITHUB_ENV}
          echo "IMAGE_VERSION=$(node -p 'require("./package.json").version')" >> ${GITHUB_ENV}

      # https://github.com/marketplace/actions/docker-setup-buildx
      # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # https://github.com/marketplace/actions/docker-login
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and Push Multi-Arch Docker Image
        uses: docker/build-push-action@v6
        env:
          DOCKERHUB_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        with:
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ env.DOCKERHUB_IMAGE }}:latest
            ${{ env.DOCKERHUB_IMAGE }}:${{ env.IMAGE_VERSION }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=registry,ref=${{ env.DOCKERHUB_IMAGE }}:latest
          cache-to: |
            type=inline
            type=local,dest=/tmp/.buildx-cache

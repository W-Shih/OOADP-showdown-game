# <Wayne Shih> 29-Dec-2024
# 設定虛擬機名稱 via 變數 
VM_NAME = "ooadp-showdown-game"
HOST_PROJECT_ROOT = File.expand_path("../../..", __FILE__)  # `__FILE__` 表示當前文件的絕對路徑; `File.expand_path` 將返回絕對路徑
VM_PROJECT_ROOT = "/home/vagrant/project"
puts "VM Name: #{VM_NAME}"
puts "Vagrantfile: #{__FILE__}"
puts "Host Project Root: #{HOST_PROJECT_ROOT}"
puts "VM Project Root: #{VM_PROJECT_ROOT}"

# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # 
  # <Wayne Shih> 15-Jan-2025
  # Ask Vagrant to use the correct box for the host architecture
  ARCH = if Gem.win_platform?
    ENV["PROCESSOR_ARCHITECTURE"].downcase
  else
    `uname -m`.strip
  end
  ARCH = "amd64" if ARCH == "x86_64"
  ARCH = "arm64" if ARCH == "aarch64"
  puts "Current host architecture: #{ARCH}"

  case ARCH
  when "amd64"
    # box at https://portal.cloud.hashicorp.com/vagrant/discover/bento/ubuntu-22.04
    config.vm.box = "bento/ubuntu-22.04"
    config.vm.box_version = "202407.23.0"
  when "arm64"
    # box at https://portal.cloud.hashicorp.com/vagrant/discover/bento/ubuntu-22.04-arm64
    config.vm.box = "bento/ubuntu-22.04-arm64"
    config.vm.box_version = "202401.31.0"
  else
    raise "Unsupported host architecture: #{ARCH}"
  end

  # <Wayne Shih> 29-Dec-2024
  # 使用自定義虛擬機名稱
  config.vm.define VM_NAME

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  # 
  # <Wayne Shih> 10-Jan-2025
  # Disable default synced folder since the `Vagrantfile` is not in the project root
  config.vm.synced_folder ".", "/vagrant", disabled: true
  # 
  # <Wayne Shih> 10-Jan-2025
  # 同步本地項目根目錄 HOST_PROJECT_ROOT 到虛擬機的 VM_PROJECT_ROOT
  # 
  # Since the default type and type `virtualbox` are not working properly with the symlink, 
  # while `npm install` will throw the following error:`
  #   ```
  #   npm error code EPROTO
  #   npm error syscall symlink
  #   npm error path ../acorn/bin/acorn
  #   npm error dest /home/vagrant/project/node_modules/.bin/acorn
  #   npm error errno -71
  #   npm error EPROTO: protocol error, symlink '../acorn/bin/acorn' -> '/home/vagrant/project/node_modules/.bin/acorn'
  #   npm error A complete log of this run can be found in: /home/vagrant/.npm/_logs/2025-01-10T21_25_49_893Z-debug-0.log
  #   ```
  # So, change the type to `smb` to fix the issue for windows host.
  # Please choose the appropriate type according to your host OS.
  # Please refer to https://developer.hashicorp.com/vagrant/docs/synced-folders/basic_usage#symbolic-links
  # 
  # The downside is that the `smb` type requires credentials to access the shared folder each time the VM is started.
  # Please let me know if you have a better solution.
  config.vm.synced_folder HOST_PROJECT_ROOT, VM_PROJECT_ROOT, type: "smb"
  # config.vm.synced_folder HOST_PROJECT_ROOT, VM_PROJECT_ROOT, type: "virtualbox"

  # <Wayne Shih> 29-Dec-2024
  # 修改 vagrant ssh 的預設目錄
  config.ssh.extra_args = ['-t', "cd #{VM_PROJECT_ROOT} && bash"]

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  # 
  # <Wayne Shih> 29-Dec-2024
  # 使用 provision.sh 進行環境設定
  # provision.sh 只在 vagrant up 第一次執行時運行, 之後需要手動強制運行
  config.vm.provision "shell", path: "./provision.sh", env: {
    "VM_PROJECT_ROOT" => VM_PROJECT_ROOT
  }
end
